
def factorial(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial(n - 1)

def mostrar_factoriales():
    num = int(input("Ingrese un número: "))
    print("Factoriales:")
    for i in range(1, num + 1):
        print(f"{i} = {factorial(i)}")



def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    return fibonacci(n - 1) + fibonacci(n - 2)

def mostrar_fibonacci():
    num = int(input("Ingrese hasta qué posición mostrar la serie: "))
    print("Serie de Fibonacci:")
    for i in range(num):
        print(fibonacci(i), end=" ")
    print()



def potencia(base, exponente):
    if exponente == 0:
        return 1
    return base * potencia(base, exponente - 1)

def probar_potencia():
    base = int(input("Base: "))
    exp = int(input("Exponente: "))
    print(f"{base}^{exp} = {potencia(base, exp)}")



def decimal_a_binario(n):
    if n == 0:
        return ""
    return decimal_a_binario(n // 2) + str(n % 2)

def convertir_a_binario():
    num = int(input("Número decimal: "))
    resultado = decimal_a_binario(num)
    print(f"Binario: {resultado if resultado else '0'}")

def main():
    while True:
        print("--- RECURSIVIDAD ---")
        print("1_ Factorial")
        print("2_ Fibonacci")
        print("3_ Potencia")
        print("4_ Decimal a binario")
        print("5_ Salir")

        opcion = input("Elija una opción: ")
        match opcion:
            case '1':
                mostrar_factoriales()
            case '2':
                mostrar_fibonacci()
            case '3':
                probar_potencia()
            case '4':
                convertir_a_binario()
            case '5':
                print("Saliendo...")
                break
            case _:
                print("Opción inválida. Intente de nuevo.")



if __name__ == "__main__":
    main()